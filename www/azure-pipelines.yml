trigger:
- master

stages:
- stage: Build
  jobs:
  - job: Build
    pool:
      vmImage: 'Ubuntu-16.04'
    continueOnError: true
    steps:
    - script: echo "Build dotnet core"
    - task: DotNetCoreCLI@2
      displayName: 'dotnet Restore'
      inputs:
        command: restore
        projects: '**/*.csproj'
    - task: DotNetCoreCLI@2
      displayName: 'dotnet Build'
      inputs:
        command: 'build'
        projects: '**/*.csproj'
        workingDirectory: www
        # arguments: '--configuration Release' 
    - task: DotNetCoreCLI@2
      displayName: 'dotnet Publish'
      inputs:
        command: publish
        publishWebProjects: True
        arguments: '--output $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: True
    - task: PublishBuildArtifacts@1
      displayName: 'Publish artifact (zip file)'
      inputs:
        pathtoPublish: $(Build.ArtifactStagingDirectory)
        artifactName: devops-demo

- stage: Deploy
  jobs:
  - deployment: Deploy
    pool:
      vmImage: 'Ubuntu-16.04'
    environment: 'Prod'
    strategy:
      runOnce:
        deploy:
          steps:
          - script: echo "Deploy to Azure"
          - task: DownloadPipelineArtifact@2
            inputs:
              artifact: devops-demo
          - task: AzureWebApp@1
            displayName: 'Azure Web App Deploy'
            inputs:
              azureSubscription: devops-demo-jmutchek-internal
              appType: webAppLinux
              appName: jm-devops-demo
              package: '$(Pipeline.Workspace)/devops-demo/**/*.zip'

